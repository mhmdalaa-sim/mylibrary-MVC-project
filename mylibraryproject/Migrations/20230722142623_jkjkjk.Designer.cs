// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mylibraryproject.Models.Data;

#nullable disable

namespace mylibraryproject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230722142623_jkjkjk")]
    partial class jkjkjk
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("mylibraryproject.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("mylibraryproject.Models.AuthorGenre", b =>
                {
                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.HasKey("AuthorId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("AuthorGenres");
                });

            modelBuilder.Entity("mylibraryproject.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("GenreId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            GenreId = 1,
                            Title = "The Great Gatsby",
                            year = 1925
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            GenreId = 2,
                            Title = "To Kill a Mockingbird",
                            year = 1960
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            GenreId = 3,
                            Title = "1984",
                            year = 1949
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 4,
                            GenreId = 4,
                            Title = "The Catcher in the Rye",
                            year = 1951
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 5,
                            GenreId = 5,
                            Title = "Pride and Prejudice",
                            year = 1813
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 6,
                            GenreId = 1,
                            Title = "The Hobbit",
                            year = 1937
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 6,
                            GenreId = 1,
                            Title = "The Lord of the Rings",
                            year = 1954
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 7,
                            GenreId = 3,
                            Title = "The Hitchhiker's Guide to the Galaxy",
                            year = 1979
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 8,
                            GenreId = 3,
                            Title = "Brave New World",
                            year = 1932
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 9,
                            GenreId = 2,
                            Title = "Frankenstein",
                            year = 1818
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 10,
                            GenreId = 2,
                            Title = "Dracula",
                            year = 1897
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 11,
                            GenreId = 3,
                            Title = "The War of the Worlds",
                            year = 1898
                        },
                        new
                        {
                            Id = 13,
                            AuthorId = 11,
                            GenreId = 3,
                            Title = "The Time Machine",
                            year = 1895
                        },
                        new
                        {
                            Id = 14,
                            AuthorId = 12,
                            GenreId = 6,
                            Title = "The Adventures of Sherlock Holmes",
                            year = 1892
                        },
                        new
                        {
                            Id = 15,
                            AuthorId = 13,
                            GenreId = 7,
                            Title = "The Picture of Dorian Gray",
                            year = 1890
                        },
                        new
                        {
                            Id = 16,
                            AuthorId = 14,
                            GenreId = 8,
                            Title = "The Sun Also Rises",
                            year = 1926
                        },
                        new
                        {
                            Id = 17,
                            AuthorId = 14,
                            GenreId = 8,
                            Title = "The Old Man and the Sea",
                            year = 1952
                        },
                        new
                        {
                            Id = 18,
                            AuthorId = 15,
                            GenreId = 9,
                            Title = "The Sound and the Fury",
                            year = 1929
                        },
                        new
                        {
                            Id = 19,
                            AuthorId = 16,
                            GenreId = 10,
                            Title = "One Hundred Years of Solitude",
                            year = 1967
                        },
                        new
                        {
                            Id = 20,
                            AuthorId = 16,
                            GenreId = 10,
                            Title = "Love in the Time of Cholera",
                            year = 1985
                        });
                });

            modelBuilder.Entity("mylibraryproject.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("mylibraryproject.Models.AuthorGenre", b =>
                {
                    b.HasOne("mylibraryproject.Models.Author", "Author")
                        .WithMany("AuthorGenres")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mylibraryproject.Models.Genre", "Genre")
                        .WithMany("AuthorGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("mylibraryproject.Models.Book", b =>
                {
                    b.HasOne("mylibraryproject.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mylibraryproject.Models.Genre", "Genre")
                        .WithMany("Books")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("mylibraryproject.Models.Author", b =>
                {
                    b.Navigation("AuthorGenres");

                    b.Navigation("Books");
                });

            modelBuilder.Entity("mylibraryproject.Models.Genre", b =>
                {
                    b.Navigation("AuthorGenres");

                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
